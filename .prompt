#!/bin/bash

prompt_command () {
    if [ $? -eq 0 ]; then # set an error string for the prompt, if applicable
        ERRPROMPT=" "
    else
        ERRPROMPT='->($?) '
    fi

    local GITSTATUS=$(git_status)
    local TIME=$(date +"%H:%M:%S"|sed 's/ //g') # format time for prompt string

    # if a site is fataling, this will return nothing. avoid using for too much
    # consider changing to use the <id>-data.json file which won't fail due to random customer code
    local ENV=$(php -r "include '/var/www/config/wp-config.php'; echo VIP_GO_APP_ENVIRONMENT;" 2> /dev/null)
    local  MS=$(php -r "include '/var/www/config/wp-config.php'; echo MULTISITE ? '(ms) ' : '(ss) ';" 2> /dev/null)
    local URL=$(wp option get home 2> /dev/null | xargs) # xargs hack to trim whitespace
	URL=${URL/#https:\/\//}
	URL=${URL/#http:\/\//}

    # this is too slow to run in the prompt
    # local HOST=$(wp option get home | sed 's/^.*\/\///g')
    local HOST=${MS}$(hostname | sed 's/-sbx-.*$//g')


    ##
    # Colors

    # regular
    local   BLACK="\[\e[0;30m\]"
    local     RED="\[\e[0;31m\]"
    local   GREEN="\[\e[0;32m\]"
    local  YELLOW="\[\e[0;33m\]"
    local    BLUE="\[\e[0;34m\]"
    local MAGENTA="\[\e[0;35m\]"
    local    CYAN="\[\e[0;36m\]"
    local   WHITE="\[\e[0;37m\]"

    # bold
    local   BBLACK="\[\e[1;30m\]" #grey
    local     BRED="\[\e[1;31m\]"
    local   BGREEN="\[\e[1;32m\]"
    local  BYELLOW="\[\e[1;33m\]"
    local    BBLUE="\[\e[1;34m\]"
    local BMAGENTA="\[\e[1;35m\]"
    local    BCYAN="\[\e[1;36m\]"
    local   BWHITE="\[\e[1;37m\]"

    local   HBLACK=${BLACK/;3/;9} #grey
    local     HRED=${RED/;3/;9}
    local   HGREEN=${GREEN/;3/;9}
    local  HYELLOW=${YELLOW/;3/;9}
    local    HBLUE=${BLUE/;3/;9}
    local HMAGENTA=${MAGENTA/;3/;9}
    local    HCYAN=${CYAN/;3/;9}
    local   HWHITE=${WHITE/;3/;9}

    # background (for insertion). i.e. ${MAGENTA/;/;${BGBLUE};}
    local   BGBLACK="40"
    local     BGRED="41"
    local   BGGREEN="42"
    local  BGYELLOW="43"
    local    BGBLUE="44"
    local BGMAGENTA="45"
    local    BGCYAN="46"
    local   BGWHITE="47"

    # return color to Terminal setting for text color
    local DEFAULT="\[\e[0m\]"

    local CURDIR=$(pwdtail)
    local TITLEBAR='\[\e]2;${PWD}\a\]' # also preserves pwd in new tab

	if [ $ENV == 'production' ]; then
		color="${HWHITE/;/;${BGCYAN};}"
	else
		color="${BYELLOW/;/;${BGMAGENTA};}";
	fi

    # export PS1="${TITLEBAR}${CYAN}[ ${BCYAN}\u${GREEN}@${BCYAN}${DEFAULT}\
    export PS1="\n${TITLEBAR}${color}[S]${DEFAULT} ${CYAN}[${DEFAULT}${WHITE}${TIME}${CYAN}]\
${RED}$ERRPROMPT${WHITE}${DEFAULT}\
${BLUE}${HOST}${DEFAULT} ${HYELLOW}${URL}${DEFAULT} ${HWHITE/;/;${BGBLUE};}${ENV}${DEFAULT} ${YELLOW}${CURDIR}${DEFAULT}\
${MAGENTA}${GITSTATUS}${DEFAULT}${MAGENTA}${DEFAULT} $ "

}

PROMPT_COMMAND=prompt_command

#returns the last 2 fields of the working directory
pwdtail () {
    pwd|sed -e "s/${HOME//\//\\/}/~/"|awk -F/ '{nlast = NF -1; if ( $NF == "~" ) print $NF; else  print $nlast"/"$NF}'
}


git_status() {

    if in_git_repo; then
        if git rev-parse --abbrev-ref HEAD > /dev/null 2>&1; then
            echo -n ' ['
            # branch
            git rev-parse --abbrev-ref HEAD | tr -d "\n"
            # summary changes, eg `(2)3+101-`
            git diff --shortstat | awk '/^ [0-9]/ { f += $1; i += $4; d += $6 } END { printf(" (%d)%d+%d-", f, i, d) }' 2> /dev/null | tail -n1
            echo -n ']'
            return
        fi
    # a little annoying. disable for now
    # may later quietly make a few dirs like wp-includes simple git
    # repos for the sake of tracking and undoing changes while debugging.
    # else
    #     if [[ $(pwd) == '/root' ]]; then
    #         echo -n ' [not-git]'
    #     fi
    fi
}


in_git_repo() {
    git=`git rev-parse --is-inside-work-tree 2> /dev/null`
    if [[ $git == 'true' ]]; then
        return 0;
    fi
    return 1;
}
